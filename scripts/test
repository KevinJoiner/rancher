#!/bin/bash
set -e

cleanup()
{
    EXIT=$?
    set +ex
    echo Stopping rancher server
    kill $RANCHER_RUN_PID
    wait $RANCHER_RUN_PID
    if [ $PID != -1 ]; then
      kill $PID
      wait $PID
    fi
    return $EXIT
}

# skipping tests for s390x since k3s doesn't support s390x yet
if [ ${ARCH} == s390x ]; then
    exit 0
fi

cd $(dirname $0)/..

#[ "${ARCH}" == "amd64" ] && RACE=-race
go test -cover -tags=test ./pkg/...

if [ ${ARCH} == arm64 ] || [ ${ARCH} == s390x ]; then
    export ETCD_UNSUPPORTED_ARCH=${ARCH}
fi

echo Starting rancher server for test
touch /tmp/rancher.log

run_rancher()
{
    while sleep 2; do
        if [ "$PID" != "-1" ] && [ ! -e /proc/$PID ]; then
            echo Rancher died
            echo Rancher logs were
            tail -n 25 /tmp/rancher.log
            echo K3s logs were:
            tail -n 25 build/testdata/k3s.log
            if [ "$INT_TESTS_STARTED" = "true" ]; then
              echo Rancher died after tests started, aborting
              exit 1
            fi
            set +e
            echo Attempting to kill K3s
            pkill -e k3s
            set -e
            PID=-1
            sleep 5
        fi
        if [ "$PID" = "-1" ]; then
            echo Starting rancher server using run
            ./scripts/run >/tmp/rancher.log 2>&1 &
            PID=$(pgrep -f "./scripts/run")
        fi
        sleep 2
    done
}

tail_slow_starting_rancher()
{
    sleep 300
    echo 'Rancher has not deployed webhook after 5m tailing logs'
    tail -f "/tmp/rancher.log"
}

# uncomment to get startup logs. Don't leave them on because it slows drone down too
# much
#tail -F /tmp/rancher.log &
#TPID=$!
PID=-1
run_rancher &
RANCHER_RUN_PID=$(pgrep -f "run_rancher")
trap cleanup exit

echo Sleeping for 5 seconds before checking Rancher health3
sleep 5

while ! curl -sf http://localhost:8080/ping; do
    sleep 2
done

# Tail the rancher logs if rancher fails to deploy the webhook after 5 minutes.
tail_slow_starting_rancher &
# Get PID of the tail command so we can kill it if needed using pgrep over $! since there are other async commands being run
TAIL_PID=$!

# Wait for Rancher to deploy rancher-webhook.
while ! kubectl --kubeconfig /etc/rancher/k3s/k3s.yaml rollout status -w -n cattle-system deploy/rancher-webhook >/dev/null 2>&1; do
    echo "Waiting for rancher to deploy rancher-webhook..."
    sleep 5
done

# After rancher deploys webhook kill the bash command running tail.
kill ${TAIL_PID}
KILL_PID=$!
# Dump the terminated message from the above kill command.
wait ${KILL_PID} 2>/dev/null

#kill $TPID

# get correct agent tag
source ./scripts/version
export AGENT_TAG=${TAG}

echo Running tests

echo Running: build-token-generator
./tests/v2/integration/scripts/build-integration-setup

path=$(pwd)
export CATTLE_TEST_CONFIG=${path}/config.yaml
./tests/v2/integration/bin/integrationsetup
go test -v ./tests/v2/integration/...

INT_TESTS_STARTED=true
cd ./tests/integration
tox -e rancher -- -m "not nonparallel" -n $(nproc)
tox -e rancher -- -m nonparallel

#tail -f /tmp/rancher-test.log &
